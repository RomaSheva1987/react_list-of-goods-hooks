{"version":3,"sources":["App.tsx","api/goodsFromServer.ts","index.tsx"],"names":["SortType","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","g1","g2","length","ALPHABET","localeCompare","reverse","App","useState","NONE","setSortType","setReverse","className","type","classNames","onClick","goodsFromServer","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAMKA,E,qDCNU,G,YAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,ODOK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKH,EAASM,OACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAC7C,MACF,KAAKV,EAASW,SACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,cAAcH,MAC/C,MACF,QACEJ,EAAY,YAAOH,GAOvB,OAJIE,GACFC,EAAaQ,UAGRR,G,SAhCJL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMc,EAAgB,WAC3B,MAAgCC,mBAASf,EAASgB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOX,EAAP,KAAmBc,EAAnB,KAOA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,IAAaH,EAASW,WAGtCW,QAAS,kBAAML,EAAYjB,EAASW,WARtC,iCAaA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,IAAaH,EAASM,SAGtCgB,QAAS,kBAAML,EAAYjB,EAASM,SARtC,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAajB,IAGjBkB,QAAS,kBAAMJ,GAAYd,IAR7B,sBAaED,IAAaH,EAASgB,MAAQZ,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAnDI,WACZL,EAAYjB,EAASgB,MACrBE,GAAW,IA8CL,sBAWJ,6BACE,6BACGjB,EACCsB,EACA,CAAEpB,WAAUC,eACZoB,KAAI,SAACC,GAAD,OACJ,oBACE,UAAQ,OADV,SAIGA,GAFIA,cE7GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e975fa43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport goodsFromServer from './api/goodsFromServer';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    case SortType.ALPHABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    default:\n      visibleGoods = [...goods];\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            { sortType, isReversed },\n          ).map((good) => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}